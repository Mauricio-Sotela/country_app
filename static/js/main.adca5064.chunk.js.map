{"version":3,"sources":["components/icons/lib.js","components/Loading.js","helpers.js","components/Country.js","App.js","index.js"],"names":["library","add","fas","far","Spinner","className","icon","spin","NumbersFormat","number","toString","replace","PersonList","state","country","handleChange","event","setState","target","value","map","handleSubmit","preventDefault","user","axios","get","then","res","data","console","log","name","capital","population","subregion","timezones","flag","languages","n","curName","currencies","curSymbol","symbol","setTimeout","onSubmit","this","type","onChange","placeholder","src","alt","width","React","Component","App","props","userInput","loading","e","trim","Loading","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAIAA,IAAQC,IAAIC,IAAKC,K,wCCOFC,MARf,WACE,OACE,yBAAKC,UAAU,WACb,kBAAC,IAAD,CAAiBC,KAAK,UAAUD,UAAU,OAAOE,MAAI,M,iBCD5CC,EALI,SAACC,GAClB,GAAIA,EACF,OAAOA,EAAOC,WAAWC,QAAQ,0BAA2B,QCG3CC,E,4MACnBC,MAAQ,CAAEC,QAAS,W,EAEnBC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZH,QAASE,EAAME,OAAOC,MACtBC,IAAI,qCAAD,OAAuCJ,EAAME,OAAOC,MAApD,Q,EAWPE,aAAe,SAACL,GACa,YAAvB,EAAKH,MAAMC,SACbE,EAAMM,iBAGR,IAAMC,EAAO,CACXT,QAAS,EAAKD,MAAMC,SAGtBU,IACGC,IADH,gDACgDF,EAAKT,UAClDY,MAAK,SAACC,GACL,IAAIC,EAAOD,EAAIC,KAAK,GACpBC,QAAQC,IAAIF,GAFC,IAGPG,EAA0DH,EAA1DG,KAAMC,EAAoDJ,EAApDI,QAASC,EAA2CL,EAA3CK,WAAYC,EAA+BN,EAA/BM,UAAWC,EAAoBP,EAApBO,UAAWC,EAASR,EAATQ,KACvD,EAAKnB,SAAS,CACZc,OACAC,UACAC,aACAC,YACAC,YACAE,UAAW,CACTT,EAAKS,UAAUjB,KAAI,SAACkB,GAClB,OAAO,8BAAOA,EAAEP,KAAT,UAGXK,OACAG,QAASX,EAAKY,WAAW,GAAGT,KAC5BU,UAAWb,EAAKY,WAAW,GAAGE,a,kEApCjB,IAAD,OAClBC,YAAW,WACT,EAAK1B,SAAS,CACZH,QAAS,YAEX,EAAKO,iBACJ,O,+BAoCH,OACE,6BACE,0BAAMuB,SAAUC,KAAKxB,cACnB,+CAEE,2BACEyB,KAAK,OACLf,KAAK,OACLgB,SAAUF,KAAK9B,aACfiC,YAAY,0BAGhB,4BAAQF,KAAK,UAAb,WAEF,4BAAKD,KAAKhC,MAAMkB,MAChB,yBAAKkB,IAAKJ,KAAKhC,MAAMuB,KAAMc,IAAKL,KAAKhC,MAAMC,QAASqC,MAAM,UAC1D,2BACE,4CADF,IAC6BN,KAAKhC,MAAMqB,UADxC,KAGA,2BACE,6CACCW,KAAKhC,MAAMmB,SAEd,2BACE,gDAA8BxB,EAAcqC,KAAKhC,MAAMoB,aAGzD,2BACE,8CACCY,KAAKhC,MAAM0B,QAFd,IAEwBM,KAAKhC,MAAM4B,UAFnC,KAIA,2BACE,iDACCI,KAAKhC,MAAMwB,gB,GApFkBe,IAAMC,WCAzBC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACD1C,MAAQ,CACX2C,UAAW,GACXC,SAAS,GAEX,EAAK1C,aAAe,SAAC2C,GACnB,EAAKzC,SAAS,CACZuC,UAAWE,EAAExC,OAAOC,MAAMwC,UARb,E,gEAYE,IAAD,OAClBhB,YAAW,WACT,EAAK1B,SAAS,CACZwC,SAAS,MAEV,O,+BAeH,OAAIZ,KAAKhC,MAAM4C,QAAgB,kBAACG,EAAD,MAE7B,kBAAC,IAAMC,SAAP,KACE,2CAEA,kBAAC,EAAD,CAASjC,KAAK,uB,GAtCWwB,IAAMC,WCIvCS,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.adca5064.chunk.js","sourcesContent":["import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\n\nlibrary.add(fas, far);\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction Spinner() {\n  return (\n    <div className=\"loading\">\n      <FontAwesomeIcon icon=\"spinner\" className=\"icon\" spin />\n    </div>\n  );\n}\n\nexport default Spinner;\n","let  NumbersFormat=(number)=> {\n  if (number) {\n    return number.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n  }\n}\nexport default NumbersFormat","import React from \"react\";\nimport axios from \"axios\";\nimport NumbersFormat from \"../helpers\"\n\n\nexport default class PersonList extends React.Component {\n  state = { country: \"Germany\" };\n\n  handleChange = (event) => {\n    this.setState({\n      country: event.target.value,\n      map: `https://www.google.com/maps/place/${event.target.value}/`,\n    });\n  };\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        country: \"Germany\",\n      });\n      this.handleSubmit();\n    }, 100);\n  }\n  handleSubmit = (event) => {\n    if (this.state.country !== \"Germany\") {\n      event.preventDefault();\n    }\n\n    const user = {\n      country: this.state.country,\n    };\n\n    axios\n      .get(`https://restcountries.eu/rest/v2/name/${user.country}`)\n      .then((res) => {\n        let data = res.data[0];\n        console.log(data);\n        let { name, capital, population, subregion, timezones, flag } = data;\n        this.setState({\n          name,\n          capital,\n          population,\n          subregion,\n          timezones,\n          languages: [\n            data.languages.map((n) => {\n              return <span>{n.name}, </span>;\n            }),\n          ],\n          flag,\n          curName: data.currencies[0].name,\n          curSymbol: data.currencies[0].symbol,\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Country Name:\n            <input\n              type=\"text\"\n              name=\"name\"\n              onChange={this.handleChange}\n              placeholder=\"Write a country name\"\n            />\n          </label>\n          <button type=\"submit\">Search</button>\n        </form>\n        <h2>{this.state.name}</h2>\n        <img src={this.state.flag} alt={this.state.country} width=\"200px\" />\n        <p>\n          <strong>Region: </strong>({this.state.subregion})\n        </p>\n        <p>\n          <strong>Capital: </strong>\n          {this.state.capital}\n        </p>\n        <p>\n          <strong>population: </strong>{NumbersFormat(this.state.population)}\n          \n        </p>\n        <p>\n          <strong>currency: </strong>\n          {this.state.curName}({this.state.curSymbol})\n        </p>\n        <p>\n          <strong>language(s): </strong>\n          {this.state.languages}\n        </p>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Loading from \"./components/Loading\";\nimport Country from \"./components/Country\";\n//import axios from \"axios\"; if you would like to use it 💪🏻\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInput: \"\",\n      loading: true,\n    };\n    this.handleChange = (e) => {\n      this.setState({\n        userInput: e.target.value.trim(),\n      });\n    };\n  }\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        loading: false,\n      });\n    }, 2000);\n  }\n\n  // fetch result\n  // let { name, capital, topLevelDomain, timezones, languages } = item;\n  // this.setState({\n  //   name,\n  //   capital,\n  //   topLevelDomain,\n  //   timezones,\n  //   languages,\n  //   loading: false,\n  // });\n\n  render() {\n    if (this.state.loading) return <Loading />;\n    return (\n      <React.Fragment>\n        <h1>Country App</h1>\n\n        <Country data=\"sendSomething\" />\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"react-bootstrap\";\nimport \"./scss/main.scss\";\nimport \"fontawesome\";\nimport \"./components/icons/lib\";\n\nimport App from \"./App.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}